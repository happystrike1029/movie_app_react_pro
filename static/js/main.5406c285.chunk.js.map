{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAiCeA,MA7Bf,YAA0D,EAA1CC,GAA2C,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC9C,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,aAAf,UACI,oBAAIA,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,aAAd,SAA4BL,IAC5B,oBAAIK,UAAU,eAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,oBAAgBL,UAAU,eAA1B,SACKI,GADIC,QAKjB,oBAAGL,UAAU,gBAAb,UAA8BH,EAAQS,MAAM,EAAG,KAA/C,gBC8DDC,G,kNA1EbC,MAAQ,CACNC,WAAY,EACZC,OAAS,I,EAGXC,U,sBAAY,8BAAAC,EAAA,sEAMAC,IAAMC,IAAI,yEANV,gBAIEJ,EAJF,EAGRK,KACEA,KAAQL,OAIZ,EAAKM,SAAS,CAACN,SAAQD,WAAY,IARzB,2C,uDAWZ,WAIEQ,KAAKN,c,oBAGP,WAuBE,MAA4BM,KAAKT,MAA1BC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,OAClB,OACE,yBAASV,UAAU,YAAnB,SACGS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,cAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAOP,KAAI,SAAAe,GAAK,OACf,cAAC,EAAD,CAEExB,GAAMwB,EAAMxB,GACZC,KAAQuB,EAAMvB,KACdC,MAASsB,EAAMtB,MACfC,QAAWqB,EAAMrB,QACjBC,OAAUoB,EAAMC,mBAChBpB,OAAUmB,EAAMnB,QANTmB,EAAMxB,e,GA1DX0B,IAAMC,YCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5406c285.chunk.js","sourcesContent":["import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({id, year, title, summary, poster, genres}){\r\n    return (\r\n        <div className=\"movie\">\r\n            <img src={poster} alt={title} title={title}/>\r\n            <div className=\"movie_data\">\r\n                <h3 className=\"movie_title\">{title}</h3>\r\n                <h5 className=\"movie_year\">{year}</h5>\r\n                <ul className=\"movie_genres\">\r\n                    {genres.map((genre, index) => (\r\n                        <li key={index} className=\"genres_genre\">\r\n                            {genre}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <p className=\"movie_summary\">{summary.slice(0, 180)}...</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id : propTypes.number.isRequired,\r\n    year : propTypes.number.isRequired,\r\n    title : propTypes.string.isRequired,\r\n    summary : propTypes.string.isRequired,\r\n    poster : propTypes.string.isRequired,\r\n    genres : propTypes.arrayOf(propTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Movie from \"./Movie\";\r\nimport \"./App.css\";\r\n\r\nclass App extends React.Component{ // state를 이용하기 위해서 class component를 사용 \r\n  state = {\r\n    isLoading : true, \r\n    movies : []\r\n  };\r\n\r\n  getMovies = async() =>{\r\n    //const movies = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json\");\r\n    const {\r\n      data : {\r\n        data : {movies}\r\n      }      \r\n    } = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\");\r\n    //console.log(\"TEST : \", movies);\r\n    this.setState({movies, isLoading : false});\r\n  }\r\n\r\n  componentDidMount(){\r\n    // setTimeout(()=>{\r\n    //   this.setState({isLoading : false});\r\n    // }, 6000);\r\n    this.getMovies();\r\n  }\r\n\r\n  render(){\r\n    // const {isLoading} = this.state;\r\n    // return <div>\r\n    //   {isLoading ? \"Loading...\" : \"We are ready\"}\r\n    // </div>;\r\n    // const {isLoading, movies} = this.state;\r\n    // return(\r\n    // <div>\r\n    //   {isLoading ? \"Loading...\" : movies.map(movie => (\r\n    //     // console.log(\"TEST > \", movie),\r\n    //     <Movie\r\n    //       key = {movie.id}\r\n    //       id = {movie.id}\r\n    //       year = {movie.year}\r\n    //       title = {movie.title}\r\n    //       summary = {movie.summary}\r\n    //       poster = {movie.medium_cover_image}\r\n    //     />\r\n    //   ))}\r\n    // </div>\r\n    // );\r\n    \r\n    //4.2 Styling the Movies\r\n    const {isLoading, movies} = this.state;\r\n    return(\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader_text\">Loading...</span>\r\n          </div>\r\n        ):(\r\n          <div className=\"movies\">\r\n            {movies.map(movie => (\r\n              <Movie \r\n                key = {movie.id}\r\n                id = {movie.id}\r\n                year = {movie.year}\r\n                title = {movie.title}\r\n                summary = {movie.summary}\r\n                poster = {movie.medium_cover_image}\r\n                genres = {movie.genres}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n/*  StrictMode 는 애플리케이션 내의 잠재적인 문제를 알아내기 위한 도구 */\r\nReactDOM.render(\r\n  <React.StrictMode> \r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}